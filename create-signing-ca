#!/bin/bash
# Derek Moore <derek.moore@gmail.com>

# -----------------------------------------------------------------------------
# Setup
# -----------------------------------------------------------------------------
set -o errexit
set -o nounset
set -o pipefail

# -----------------------------------------------------------------------------
# Globals
# -----------------------------------------------------------------------------
declare -r SCRIPT=${0##*/}
declare -x SAN=${SAN:-}
declare -r BIN_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
declare    CA_DIR=
declare    PARENT=${BIN_DIR}/..

# -----------------------------------------------------------------------------
# Functions
# -----------------------------------------------------------------------------
function usage() {
  local exit_code=${1:-1}
  cat <<USAGE

  Usage:
    ${SCRIPT} -d CA_DIR

  Initializes a new signing sub-CA in CA_DIR

  Options:
    -d CA_DIR  Target directory to be created and initialized

USAGE
  exit ${exit_code}
}

function parse_options() {
  while getopts hd: flag; do
    case ${flag} in
    d) CA_DIR=${OPTARG} ;;
    h) usage 0 ;;
    *) usage 1 ;;
    esac
  done
}

function validate_options() {
  if [[ -z ${CA_DIR} ]]; then
    usage 1
  fi
}

function source_files() {
  source ${BIN_DIR}/functions
  [[ -f "${BIN_DIR}/defaults.conf" ]] &&
    source ${BIN_DIR}/defaults.conf
}

function create_signing_ca_certificate() {
  pushd ${PARENT} > /dev/null
  openssl ca \
    -batch \
    -notext \
    -config conf/ca.conf \
    -in ${CA_DIR}/ca/ca.csr \
    -out ${CA_DIR}/ca/ca.crt \
    -days 3652 \
    -extensions signing_ca_ext \
    -passin env:CA_PARENT_PASS
  popd > /dev/null
}

function create_ca_chain() {
  # Create the chain bundle if this is a sub-CA
  if [[ -f ${PARENT}/ca/chain.pem ]]; then
    cat ${PARENT}/ca/chain.pem > ca/chain.pem
  elif [[ -f ${PARENT}/ca/ca.crt ]]; then
    cat ${PARENT}/ca/ca.crt > ca/chain.pem
  fi
  cat ca/ca.crt >> ca/chain.pem
}

# -----------------------------------------------------------------------------
# Main
# -----------------------------------------------------------------------------
parse_options "${@}"
validate_options
source_files
message "Creating new signing sub-CA in '${CA_DIR}'"
init_ca_home "${CA_DIR}"
generate_conf "${CA_DIR}/bin/defaults.conf"
source "${CA_DIR}/bin/defaults.conf"
ask_passphrase "signing"
ask_ca_passphrase "root"
pushd "${CA_DIR}" > /dev/null
copy_ca_template "signing"
create_ca_key
create_ca_csr
create_signing_ca_certificate
create_ca_crl
copy_scripts
create_ca_chain
popd > /dev/null
message "Signing sub-CA initialized."
