#!/bin/bash
# Derek Moore <derek.moore@gmail.com>

# -----------------------------------------------------------------------------
# Setup
# -----------------------------------------------------------------------------
set -o errexit
set -o nounset
set -o pipefail


# -----------------------------------------------------------------------------
# Globals
# -----------------------------------------------------------------------------
declare -r SCRIPT=${0##*/}
declare -x SAN=${SAN:-}
declare    CA_DIR=
declare    BIN_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

# -----------------------------------------------------------------------------
# Functions
# -----------------------------------------------------------------------------
function usage() {
  local exit_code=${1:-1}
  cat <<USAGE
  Usage:
    ${SCRIPT} -d CA_DIR

  Initializes a new signing sub-CA in CA_DIR

  Options:
    -d CA_DIR  Target directory to be created and initialized

USAGE
  exit ${exit_code}
}

function parse_options() {
  while getopts hd: flag; do
    case ${flag} in
    d) CA_DIR=${OPTARG};;
    h) usage 0;;
    *) usage 1;;
    esac
  done
}

function validate_options() {
  if [[ -z ${CA_DIR} ]]; then
    usage 1
  fi
}

# -----------------------------------------------------------------------------
# Main
# -----------------------------------------------------------------------------
parse_options "${@}"
validate_options

source ${BIN_DIR}/functions
source ${BIN_DIR}/defaults.conf

PARENT=${BIN_DIR}/..
CA_NAME=$( basename "${CA_DIR}" )

message "Creating new signing sub-CA in '${CA_DIR}'"

init_ca_home ${CA_DIR}
generate_conf ${CA_DIR}/bin/defaults.conf
source ${CA_DIR}/bin/defaults.conf
ask_passphrase "${CA_NAME}"

echo

echo -n "Enter passphrase for root CA key: "
read -s PARENT_PASS
echo
export CA_PARENT_PASS=${PARENT_PASS}

# Fully-qualify home to we can return to it later
CA_DIR=$(cd "${CA_DIR}" && pwd)

pushd ${CA_DIR} > /dev/null

# Generate the signing CA openssl config
template "${BIN_DIR}/templates/signing.tpl" "conf/ca.conf"

# Create the signing CA key
openssl genrsa -out ca/private/ca.key -passout env:CA_PASS 2048
chmod 0400 ca/private/ca.key

# Create the signing CA csr
openssl req -new -batch \
            -config conf/ca.conf \
            -key ca/private/ca.key \
            -out ca/ca.csr \
            -passin env:CA_PASS

# Create the signing CA certificate
pushd ${PARENT} > /dev/null
openssl ca -batch -notext \
           -config conf/ca.conf \
           -in ${CA_DIR}/ca/ca.csr \
           -out ${CA_DIR}/ca/ca.crt \
           -days 3652 \
           -extensions signing_ca_ext \
           -passin env:CA_PARENT_PASS
popd > /dev/null

# Create the signing CRL
openssl ca -gencrl -batch \
           -config conf/ca.conf \
           -out crl/ca.crl

# Create the chain bundle if this is a sub-CA
if [ -f "${PARENT}/ca/chain.pem" ]; then
    cat ${PARENT}/ca/chain.pem > ca/chain.pem
fi
cat ca/ca.crt >> ca/chain.pem

copy_scripts

popd > /dev/null

message "Signing sub-CA initialized."
